<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd"
	default-lazy-init="true">

	<description>Spring公共配置文件 </description>

	<!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
	<context:component-scan base-package="org.springside.examples.miniservice" />
	
	<!-- MyBatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:/mapper/Configuration.xml" />
		<property name="mapperLocations" value="classpath:/mapper/*Mapper.xml" />
	</bean>

	<!-- 事务管理器配置, 使用jdbc事务 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

	<!-- JSR303 Validator定义 -->
 	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />

	<!-- production/local development环境 -->
 	<beans profile="production">
 		<!-- 定义易受环境影响的变量 -->
		<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
			<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
			<property name="ignoreResourceNotFound" value="true" />
			<property name="locations">
				<list>
					<!-- 标准配置 -->
					<value>classpath*:/application.properties</value>
					<!-- 本地开发环境配置 -->
					<value>classpath*:/application.local.properties</value>
					<!-- 服务器生产环境配置 -->
					<!-- <value>file:/opt/mini-service/application.server.properties</value> -->
				</list>
			</property>
		</bean>
		
		<!-- 数据源配置, 使用应用中的DBCP数据库连接池 -->
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
			<!-- Connection Info -->
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
		
			<!-- Connection Pooling Info -->
			<property name="maxActive" value="${dbcp.maxActive}" />
			<property name="maxIdle" value="${dbcp.maxIdle}" />
			<property name="defaultAutoCommit" value="false" />
			<!-- 连接Idle一个小时后超时 -->
			<property name="timeBetweenEvictionRunsMillis" value="3600000" />
			<property name="minEvictableIdleTimeMillis" value="3600000" />
		</bean>
		
		<!-- 数据源配置,使用应用服务器的数据库连接池 -->
		<!--<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/ExampleDB" />-->
	</beans>
	
	<!-- unit test环境 -->
	<beans profile="test">
		<!-- 定义易受环境影响的变量 -->
		<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
			<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
			<property name="ignoreResourceNotFound" value="true" />
			<property name="locations">
				<list>
					<!-- 标准配置 -->
					<value>classpath*:/application.properties</value>
					<!-- 测试环境配置 -->
					<value>classpath*:/application.test.properties</value>
				</list>
			</property>
		</bean>				
	
		<!-- 非Pool的简单data source -->
		<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
			<!-- Connection Info -->
			<property name="driverClass" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
		</bean>
		
		<!-- 初始化数据结构 -->
		<jdbc:initialize-database data-source="dataSource" ignore-failures="ALL">
			<jdbc:script location="classpath:sql/h2/schema.sql" />
		</jdbc:initialize-database>
	
		<!-- 初始化默认数据 -->
		<bean class="org.springside.modules.test.data.DefaultDataInitializer" lazy-init="false">	
			<property name="dataSource" ref="dataSource"/>
			<property name="defaultDataFile" value="/data/sample-data.xml" />
		</bean>
	</beans>
	
	<!-- functional test环境 -->
	<beans profile="functional">
		<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
			<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
			<property name="ignoreResourceNotFound" value="true" />
			<property name="locations">
				<list>
					<!-- 标准配置 -->
					<value>classpath*:/application.properties</value>
					<!-- 本地标准配置 -->
					<value>classpath*:/application.local.properties</value>
					<!-- 测试环境配置 -->
					<value>classpath*:/application.functional.properties</value>
					<!-- 本地测试环境配置 -->
					<value>classpath*:/application.functional-local.properties</value>
				</list>
			</property>
		</bean>

		<!-- 非Pool的简单data source -->
		<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
			<!-- Connection Info -->
			<property name="driverClass" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
		</bean>

		<!-- 初始化数据结构 -->
		<jdbc:initialize-database data-source="dataSource" ignore-failures="ALL">
			<jdbc:script location="classpath:sql/h2/schema.sql" />
		</jdbc:initialize-database>
	</beans>
</beans>